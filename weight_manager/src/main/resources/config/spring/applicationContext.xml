<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">


    <context:annotation-config/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <context:component-scan base-package="net.dingyabin.com.service"/>
    <context:property-placeholder location="classpath:config/properties/config.properties"/>


    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
    </bean>

    <bean id="sqlsessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:config/mappers/*.xml"/>
        <!-- 分页插件 -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个
                        reasonable: 分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页
                        pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
                        -->
                        <value>
                            helperDialect=mysql
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>


    <!--配置mabatis的mapper扫描器 ,自动扫描mapper接口，生成mapper接口代理类的实例 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- value可以有多个，用，或；隔开 -->
        <property name="basePackage" value="net.dingyabin.com.dao"/>
        <!-- 注意此处为 sqlSessionFactoryBeanName而不是sqlsessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlsessionFactory"/>
    </bean>


    <!-- 配置事务管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!--声明式事务 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="select*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="add*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
            <tx:method name="create*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
            <tx:method name="save*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- aop事务控制 -->
    <aop:config>
        <aop:pointcut expression="execution(* net.dingyabin.com.service..*.*(..))" id="pc"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
    </aop:config>

</beans>